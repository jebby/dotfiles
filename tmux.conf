# Term options
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm"
set -g xterm-keys on
# set -s escape-time 0
set -g escape-time 0

set -g exit-empty on
set -g focus-events on

# Set prefix key to <C-a> instead of <C-b>
set-option -g prefix C-a

# Allow vim to increment number with C-a
# Without this, prefix is detected and doesn't pass
# through to vim.
# This allows the user to double tap C-a to pass the second
# C-a to vim
unbind-key C-a
bind-key C-a send-prefix

# Don't suspend the terminal
unbind C-z

# Enter/exit copy mode with Escape
bind Escape copy-mode
bind -T copy-mode-vi Escape send-keys "C-c"

# Use vim keys and use vim style visual select/yank keybind
set-window-option -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle\; send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection c"

# Open current buffer text in vim
bind b split-pane -v "tmux capture-pane -t '{up-of}' -S -10000 && tmux show-buffer | vim -"

bind-key / copy-mode\; send-key /

bind - swap-window -t :-
bind + swap-window -t :+

# Show messages for longer
set-option -g display-time 4000

# Statusbar options
set -g base-index 1
set -g status-interval 1
set -g set-titles on
set -g renumber-windows on

# History options
set -g history-limit 1000

# Allow mouse navigation
set -g mouse on

# Resource tmux config file
bind C-r source-file ~/.tmux.conf

# Prompt before detaching, exiting, etc
bind C-d confirm detach
bind C-k confirm kill-window

# Send prefix to nested session
# (requires some setup on remote host)
bind -n C-g send-prefix

# 'Smart' pane switching between tmux and vim
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Swap panes with Control - <movement>
bind h run "tmux swap-pane -t "{left-of}" && tmux select-pane -L"
bind j run "tmux swap-pane -t "{down-of}" && tmux select-pane -D"
bind k run "tmux swap-pane -t "{up-of}" && tmux select-pane -U"
bind l run "tmux swap-pane -t "{right-of}" && tmux select-pane -R"

# Window navigation. I think this is already default?
bind C-u previous-window
bind C-p next-window

# New panes / windows
bind C-n new-window
bind C-s split-window -v -p25
bind C-c split-window -v -p25 -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h

# Resize panes
bind -n M-j resize-pane -D
bind -n M-k resize-pane -U
bind -n M-h resize-pane -L
bind -n M-l resize-pane -R

# Break/join a pane
bind . break-pane
bind , join-pane -t !

bind i choose-tree
bind C-i choose-session

bind C-w select-layout tiled

# Powerline
source /usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf

# Colors
# Copy mode colors
set-window-option -g mode-style bg=colour32,fg=colour255

# Pane border colors
set -g pane-border-style fg=colour238,bg=colour233
set -g pane-active-border-style fg=colour32,bg=colour233

# Command prompt bar color
set -g message-style fg=colour248,bg=colour236
